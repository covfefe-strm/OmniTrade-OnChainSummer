import { ethers } from "ethers";
import { abi as SwapRouter02ABI } from "./helpers/SwapRouter02ABI";
import { abi as SushuSwapRouterABI } from "./helpers/SushiSwapRouterABI";
import { abi as SquidMulticall } from "./helpers/SquidMulticallABI";
const errorAbi = ["function CallFailed(uint256 callPosition, bytes reason)"];
const InterfaceSwapRouter02 = new ethers.Interface(SwapRouter02ABI);
const InterfaceSushiSwapRouter = new ethers.Interface(SushuSwapRouterABI);
const InterfaceSquidMulticall = new ethers.Interface(SquidMulticall);
const InterfaceCustom = new ethers.Interface(errorAbi);
const callBridgeCallABI = [
  "address",
  "uint256",
  "tuple(uint256, address, uint256, bytes, bytes)[]",
  "string",
  "string",
  "string",
  "bytes",
  "address",
  "bool",
];
const exactInputSingleABI = [
  "tuple(address, address, uint24, address, uint256, uint256, uint160)",
];
const axelarCallABI = [
  "tuple(uint256, address, uint256, bytes, bytes)[]",
  "address",
  "bytes32",
];
const correctAxelarPayload =
  "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000db94fab880ef95d8cc47ba3e2ffc3904efab80640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000500000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000320000000000000000000000000000000000000000000000000000000000000056000000000000000000000000000000000000000000000000000000000000006c000000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000001b6382dbdea11d97f24495c9a90b7c88469134a400000000000000000000000000000000000000000000000000000000000000010000000000000000000000001b6382dbdea11d97f24495c9a90b7c88469134a4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001200000000000000000000000000000000000000000000000000000000000000044095ea7b300000000000000000000000040f70b72796c30f355df859b2c8f94f18c38adf800000000000000000000000000000000000000000000000000000000000033d80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000001b6382dbdea11d97f24495c9a90b7c88469134a40000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000100000000000000000000000040f70b72796c30f355df859b2c8f94f18c38adf8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001e00000000000000000000000000000000000000000000000000000000000000104b858183f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000080000000000000000000000000c9eaaf81430547639ff16292697686d749d347bd00000000000000000000000000000000000000000000000000000000000033d80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b1b6382dbdea11d97f24495c9a90b7c88469134a4000bb821be370d5312f44cb42ce377bc9b8a0cef1a4c830000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000400000000000000000000000001b6382dbdea11d97f24495c9a90b7c88469134a40000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000021be370d5312f44cb42ce377bc9b8a0cef1a4c83000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000242e1a7d4d0000000000000000000000000000000000000000000000000039da8d5087610000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000021be370d5312f44cb42ce377bc9b8a0cef1a4c8300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000db94fab880ef95d8cc47ba3e2ffc3904efab8064000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const errorData1 =
  "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000e45c0dee5d00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006408c379a00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000353544600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const errorData2 =
  "0x5c0dee5d00000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000006408c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000135472616e73616374696f6e20746f6f206f6c64000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const errorData3Uniswap =
  "0x08c379a0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000135472616e73616374696f6e20746f6f206f6c6400000000000000000000000000";
const updatedApproveCallData =
  "0x095ea7b30000000000000000000000002626664c2603336e57b271c5c0b26f421741e4810000000000000000000000000000000000000000000000000000000000000064";
const swapData =
  "0xb858183f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000080000000000000000000000000c9eaaf81430547639ff16292697686d749d347bd00000000000000000000000000000000000000000000000000000000000033d80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b1b6382dbdea11d97f24495c9a90b7c88469134a4000bb821be370d5312f44cb42ce377bc9b8a0cef1a4c83000000000000000000000000000000000000000000";
const sushiSwapData =
  "0xb858183f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000080000000000000000000000000c9eaaf81430547639ff16292697686d749d347bd00000000000000000000000000000000000000000000000000000000000033d80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002b1b6382dbdea11d97f24495c9a90b7c88469134a4000bb821be370d5312f44cb42ce377bc9b8a0cef1a4c83000000000000000000000000000000000000000000";
const squidError =
  "0xf23dba4100000000000000000000000021be370d5312f44cb42ce377bc9b8a0cef1a4c8300000000000000000000000000000000000000000000000000000000";
async function main() {
  const abiCoder = new ethers.AbiCoder();
  // console.log(InterfaceCustom.decodeFunctionData("CallFailed", errorData2));

  // console.log(
  //   "SwapRouter error",
  //   InterfaceSwapRouter02.parseError(errorData3Uniswap),
  // );

  // console.log(
  //   "SushiSwapRouter error",
  //   InterfaceSushiSwapRouter.parseError(errorData3Uniswap),
  // );

  // console.log("Payload", abiCoder.decode(axelarCallABI, correctAxelarPayload));

  console.log(
    "exactInput",
    InterfaceSwapRouter02.decodeFunctionData("exactInput", swapData),
  );

  // console.log(
  //   "exactInput",
  //   InterfaceSushiSwapRouter.decodeFunctionData("exactInput", sushiSwapData),
  // );

  // console.log("squid error", InterfaceSquidMulticall.parseError(squidError));
}
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
